# -*- coding: utf-8 -*-
"""Palindrome.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1paeR9gNU225qH27cB0UyHM0j33Wsqxsz
"""

import sys
from collections import deque

class Solution:
    def __init__(self):
        # Initialize a stack and a queue
        self.stack = []
        self.queue = deque()

    def pushCharacter(self, c):
        # Push character onto stack
        self.stack.append(c)

    def enqueueCharacter(self, c):
        # Enqueue character in queue
        self.queue.append(c)

    def popCharacter(self):
        # Pop character from stack
        return self.stack.pop()

    def dequeueCharacter(self):
        # Dequeue character from queue
        return self.queue.popleft()

# Read the string s
s = input().strip()

# Create the Solution class object
obj = Solution()

l = len(s)
# Push/enqueue all the characters of string s to stack and queue
for i in range(l):
    obj.pushCharacter(s[i])
    obj.enqueueCharacter(s[i])

isPalindrome = True
# Compare characters from stack and queue
for i in range(l // 2):
    if obj.popCharacter() != obj.dequeueCharacter():
        isPalindrome = False
        break

# Finally, print whether string s is a palindrome or not.
if isPalindrome:
    print("The word, " + s + ", is a palindrome.")
else:
    print("The word, " + s + ", is not a palindrome.")